openapi: 3.0.1
x-stoplight:
  id: 7n4usimnothf7
info: 
  title: Pay in 4 Installments (P4I) Lending Accounts
  description: |
    Pay-In-4 (Bi-Weekly) Provide no fee and no interest installment lending on debit card purchases.
    This API document provide the technical details about the lending accounts used by P4I product.
    UPDATED Version on API from 0.0.1 to 0.0.2 and other to 0.0.3 and 1.0.0
  version: 1.0.0
  contact:
    name: API Owner Name
    email: api.owner@jpmchase.com
servers: 
  - url: 'https://dev-instalment-loans.gbp.jpmchase.com/pay-in-four-installments/v1'
    description: Example of a valid server name.
  - url: 'https://int-instalment-loans.gbp.jpmchase.com/pay-in-four-installments/v1'
    description: Example of a valid server name.
tags:
  - name: Lending accounts
    description: Lending accounts used by pay in 4 instalmments product.
paths:
  /lending-accounts:
    get:
      tags:
        - Lending accounts
      summary: Retrieve a specified lending account detail
      description: This end-point retrieves a lending account details based on account id.
      operationId: p4iGetLendingAccount
      parameters:
        - name: path-params
          in: header
          description: |
            Header element to pass the following parameters in the JSON format for getting an External Account Number: - firmwideInternalAccountIdentifier.
            This is the UUID generated by GBP
            Example:

                {
                  "firmwideInternalAccountIdentifier": "00691cfe-4de4-4fc6-85c4-9e52a423f25c" 
                }
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/Authorization'
        - $ref: '#/components/parameters/Authorization2'
        - $ref: '#/components/parameters/RequestId'
        - $ref: '#/components/parameters/TraceId'
        - $ref: '#/components/parameters/ChannelType'
        - $ref: '#/components/parameters/ApplicationId'
        - $ref: '#/components/parameters/ApiClientId'
      responses:
        '200':
          description: Successful response from API
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetLendingAccountResponse'
        '400':
          description: Request is invalid. either required data is missing or data is not consistent
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Authorization Failure. Customer Token does not match. Customer will need to re-do the OAuth
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: 'Authorization2 Failure. The OAuth2 Authorization header was valid, but the Authorization2 failed as per the agreement with the partner, so the access is forbidden'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: 'If the {resourceId} being requested is not found'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
components:
  schemas:
    ChannelTypeEnum:
      type: string
      enum:
        - 'ASSISTED,'
        - 'PARTNER,'
        - 'IVR,'
        - 'WEB,'
        - MOBILE_NATIVE
        - OFFLINE
        - ATM
        - ADMINISTRATION
      description: |
        Digital channel type indicates where the request originated from. Following are the possible set of values for the channel-type.

        | Value           | Description |
        |-----------------|---------------------|
        | ASSISTED        | CSR is considered as Assisted. Branch employee assisting a customer on Customer device is not considered as Assisted Channel. | 
        | PARTNER         | Partner invoked Channels. No distinction for now for Partner Assisted or Partner Non-Assisted. | 
        | IVR             | IVR channel invoked API | 
        | WEB             | chase.com or any Desktop based Web client channel API invocation. | 
        | MOBILE_NATIVE   | Chase Mobile, Chase Pay mobile or Finn as examples for the Mobile Native Channel API invocation | 
        | OFFLINE         | Batch applications API invocation | 
        | ATM             | ATM channel API invocation | 
        | ADMINISTRATION  | Applications that support non-functional platform concerns such as monitoring, deployment, and configuration application |  
      maxLength: 32
    GetLendingAccountResponse:
      type: object
      description: TBD
      properties:
        productIdentifier:
          type: string
          description: Controls the product and general ledger account to which debit and credit activity will be reported
        subProductCode:
          type: string
          description: The next level of hierarchy under the product code
        firmwideInternalAccountIdentifier:
          type: string
          description: '($uuid): The GBP account id which is created for customer'
        alternateAccountIdentifier:
          type: string
          description: '( $uuid): Alternate account identifier'
        costCenterIdentifier:
          type: string
          description: The smallest segment of an organization for which you collect and report costs.
        ownershipTypeCode:
          type: string
          description: 'Also known as a 3rd Party, its an organization individual associated to JPM clients'
        lifeCycleStatusName:
          type: string
          description: ' Status which account number must be set to'
        lifeCycleStatusCode:
          type: string
          description: Life Cycle status code
        statusReasonCode:
          type: string
          description: Populated with specific attributes to comple the status of the account
        bankIdentifier:
          type: string
          description: The bank to which the DDA account is assigned
        createTimestamp:
          type: string
          description: The date and time the account was created
          format: date-time
        accountOpenDate:
          type: string
          description: The date the account was open requested
          format: date
        accountClosedDate:
          type: string
          description: The date the account was close requested
          format: date
        accountLastFour:
          type: integer
          description: The last 4 digits of externalAccountNumber (EAN)
          format: int32
          maximum: 9999
        additional:
          type: string
          description: |
            key-value pair json containing additional information specific per subProductCode. 
            Example: 
            '{{"limitAccountId": "01a00b3a-250d-46a9-865f-4ace00866edc","originalAmount": {"value": 200.00,"currencyCode": "USD"}}}'
    ErrorResponse:
      type: object
      description: Default error structure
      properties:
        errorCode:
          type: string
          description: 'A code defined by the API provider that describes the specific error for a given API. This code provides more fine grained information than the httpStatusCode. As an example if an API provides an httpStatusCode of 400 they may also include the serviceErrorCode that includes more specific information of what caused a 400 response.(i. e. INVALID_EMAIL, INVALID_PHONE_NUMBER, etc)'
        errorDescription:
          type: string
          description: Freeform explanatory text for the error.
  parameters:
    Authorization:
      name: authorization
      in: header
      description: OAuth bearer token will be sent in this header as per the OAuth2 spec. This header will be used by the API gateway. The API does not need to do anything with this header
      required: true
      schema:
        type: string
        pattern: '[\w\W\s]*'
        maxLength: 8000
    Authorization2:
      name: authorization2
      in: header
      description: Additional authorization on top of standard OAuth token in the Authorization Header. The use of this header is different for 3-legged and 2-legged use cases.
      required: true
      schema:
        type: string
        pattern: '[\w\W\s]*'
        maxLength: 8000
    RequestId:
      name: request-id
      in: header
      description: 'A unique Request Id for every request. This SHOULD be unique for every request and 128 bit number, represented in lower hex characters. Used to support idempotency of services.'
      required: true
      schema:
        type: string
        pattern: '[\d]*'
        maxLength: 128
    TraceId:
      name: trace-id
      in: header
      description: 'A unique Trace Id for every request. This SHOULD be unique for every request and 128 bit number, represented in lower hex characters.'
      required: true
      schema:
        type: string
        pattern: '[\d]*'
        maxLength: 128
    ChannelType:
      name: channel-type
      in: header
      required: true
      schema:
        $ref: '#/components/schemas/ChannelTypeEnum'
    ApplicationId:
      name: application-id
      in: header
      description: Seal Id of the client application
      required: true
      schema:
        type: string
        pattern: '[\w\W\s]*'
    ApiClientId:
      name: api-clientid
      in: header
      description: Unique identifier of the client application originating from a seal id.
      required: true
      schema:
        type: string
        pattern: '[\w\W\s]*'
